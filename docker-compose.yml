version: "3.11"
services:
    errors:
        # Fix: use init or will be many chrome (defunct) which overflow process table and server freeze
        # https://docs.docker.com/engine/reference/run/#specify-an-init-process
        init: true
        restart: always
        build:
          context: .
          args:
            UID: ${UID}
            GID: ${GID}
        command: python scrape_with_errors.py --no_of_threads 1
        environment:
          - USE_MARIA_DB=1
          - GET_SOURCE_CODE=1
          - DB_HOST=${DB_HOST}
          - DB_USER=${DB_USER}
          - DB_PASS=${DB_PASS}
          - DB_NAME=${DB_NAME}
        ulimits:
          nofile:
            soft: 1024
            hard: 2048
        deploy:
          resources:
            limits:
              cpus: "1"
              memory: 3G
        logging:
          driver: "json-file"
          options:
            max-size: "10m"
            max-file: "2"
        volumes:
          # Do not store executable files on tmpfs docker does not support executable bit
          - type: tmpfs
            tmpfs:
              size: 1G
            target: /tmp
          
    sitemap:
        # Fix: use init or will be many chrome (defunct) which overflow process table and server freeze
        # https://docs.docker.com/engine/reference/run/#specify-an-init-process
        init: true
        restart: always
        build:
          context: .
          args:
            UID: ${UID}
            GID: ${GID}
        command: python add-new-urls.py --no_of_threads 1
        environment:
          - USE_MARIA_DB=1
          - GET_SOURCE_CODE=1
          - DB_HOST=${DB_HOST}
          - DB_USER=${DB_USER}
          - DB_PASS=${DB_PASS}
          - DB_NAME=${DB_NAME}
        ulimits:
          nofile:
            soft: 1024
            hard: 2048
        deploy:
          resources:
            limits:
              cpus: "1"
              memory: 3G
        logging:
          driver: "json-file"
          options:
            max-size: "10m"
            max-file: "2"
        volumes:
          # Do not store executable files on tmpfs docker does not support executable bit
          - type: tmpfs
            tmpfs:
              size: 1G
            target: /tmp
    alldb:
        # Fix: use init or will be many chrome (defunct) which overflow process table and server freeze
        # https://docs.docker.com/engine/reference/run/#specify-an-init-process
        init: true
        restart: always
        build:
          context: .
          args:
            UID: ${UID}
            GID: ${GID}
        command: python rescrape_all_from_db.py --no_of_threads 3
        environment:
          - USE_MARIA_DB=1
          - GET_SOURCE_CODE=1
          - DB_HOST=${DB_HOST}
          - DB_USER=${DB_USER}
          - DB_PASS=${DB_PASS}
          - DB_NAME=${DB_NAME}
        ulimits:
          nofile:
            soft: 1024
            hard: 2048
        deploy:
          resources:
            limits:
              cpus: "3"
              memory: 10G
        logging:
          driver: "json-file"
          options:
            max-size: "10m"
            max-file: "2"
        volumes:
          # Do not store executable files on tmpfs docker does not support executable bit
          - type: tmpfs
            tmpfs:
              size: 4G
            target: /tmp
    api:
        # Fix: use init or will be many chrome (defunct) which overflow process table and server freeze
        # https://docs.docker.com/engine/reference/run/#specify-an-init-process
        init: true
        restart: always
        build:
          context: .
          args:
            UID: ${UID}
            GID: ${GID}
        command: python api.py
        ports:
          - 3060:3060
        environment:
          - USE_MARIA_DB=1
          - GET_SOURCE_CODE=1
          - DB_HOST=${DB_HOST}
          - DB_USER=${DB_USER}
          - DB_PASS=${DB_PASS}
          - DB_NAME=${DB_NAME}
          - APP_TARGET=api.py
          - APP_NO_OF_THREADS=1
        ulimits:
          nofile:
            soft: 1024
            hard: 2048
        deploy:
          resources:
            limits:
              cpus: "1"
              memory: 256M
        logging:
          driver: "json-file"
          options:
            max-size: "10m"
            max-file: "2"
